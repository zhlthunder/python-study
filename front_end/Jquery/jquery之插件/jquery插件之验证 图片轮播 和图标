                    1.验证插件
主要注意两点：
1）获取用户输入的内容并使用正则表达式进行检测；
2）如何return false，则标签自带的事件就不会执行了；

parsleyjs
http://parsleyjs.org/

jqueryvalidation.org
https://jqueryvalidation.org/         请学习 jquery-validation-1.17.0\demo中的demo;

<form id="form"></form>
$.validate('#form')  //就可以对form中input等标签进行验证了，可以认为它就是扩展的js插件，即完成验证功能的插件；
推荐：学习他们的源码，然后改成自己的代码；

2.UI插件：

1)bxslider
http://bxslider.com/
下载bxslider, 里面包含js和 css文件；安装下面的步骤使用即可；
        使用步骤：
        step1:
        Link required files
        First and most important, the jQuery library needs to be included (no need to download - link directly from Google).
        Next, download the package from this site and link the bxSlider CSS file (for the theme) and the bxSlider Javascript file.

         <!-- jQuery library (served from Google) -->
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
        <!-- bxSlider Javascript file -->
        <script src="/js/jquery.bxslider.min.js"></script>
        <!-- bxSlider CSS file -->
        <link href="/lib/jquery.bxslider.css" rel="stylesheet" />

        Step 2: Create HTML markup
        Create a <ul class="bxslider"> element, with a <li> for each slide. Slides can contain images, video, or any other HTML content!

        <ul class="bxslider">
          <li><img src="/images/pic1.jpg" /></li>
          <li><img src="/images/pic2.jpg" /></li>
          <li><img src="/images/pic3.jpg" /></li>
          <li><img src="/images/pic4.jpg" /></li>
        </ul>


        Step 3: Call the bxSlider
        Call .bxslider() on <ul class="bxslider">. Note that the call must be made inside of a $(document).ready() call, or the plugin will not work!


        $(document).ready(function(){
          $('.bxslider').bxSlider();
        });



2) 网站中使用图标的方法包括：
 a）使用一张大的图片，里面包含很多的小图标，然后使用抠图的方法（就是挖个洞）来显示每个小图标；比如京东的购物车；
 b) 从网上找现成的图标，比如下面的这个网站
     css样式文件-->使用样式
      除了下面的网站，bootstrap也提供样式，
          以前版本的bootstrap提供图标的方式：
                 css样式（css样式内部做的就是类似我们自己做的那种挖洞的工作，我们使用时直接调用就可以了）
                 图片库

          现在的bootstrap中的图标的方式：
                  css样式
                  字体文件（内部为所用的图标使用unicode进行统一编码，并存在一张表中，我们使用时，只需使用unicode就可以找到对应的图标了）

         注意：请体会图片库和字体文件使用方式的差异，切记

font awesome  （它本质上就是一个css样式文件，下载之后然后引用就可以了）
http://fontawesome.io/

3）网站架构相关插件：
jquery UI
https://jqueryui.com/

jquery easyui
http://www.jeasyui.com/download/index.php

4）重点介绍
bootstrap
http://v3.bootcss.com/

---bootstrap是用于构建响应式网站的前端框架；
---bootstrap的代码结构： 包括 css和js代码；

bootstrap2的代码包括： css imag(用抠洞的方式来显示图标)  js
bootstrap3的代码包括：css font（将图标做成字体库） js
cs代码中的.map文件，用于给 长的样式序列做映射，比如 div .c1.c2。。。 即样式很长，做映射后，可以节约存储空间；
js代码中的npm.js 是编译时才会用到；

小结：
bootstrap可以构建前台和后台；
bootstrap是响应式的；
bootstrap2和3的代码文件的差异；



a)响应式功能：
根据页面的宽度动态决定显示的样式，比如下面的代码就是实现这个功能的；
下面的代码的意思是，页面的宽度大于768px才使用下面的样式；
@media (min-width: 768px) {
  .lead {
    font-size: 21px;
  }

b） css内容补充之伪类；
1》》》
比如我们现在要写网页了，我们需要引用 bootstrap的 js css font文件；
比如：css中有如下的定义：
.add;after{
content:"\u9987"}

如果我们的代码是
<div class="add">aaaa</div>   ,那执行的结果是 content的内容（普通的文本或特殊图标）会被自动追加到aaaa的后面；
之所以可以实现这个功能，就是因为 伪类 after  具有这种特殊的功能；
.glyphicon-envelope:before {
  content: "\2709";
}

2709对应的是email的图标；
当我们引用glyphicon-envelope 样式后，会自动追加一个email的图标；

2》》》
伪类应用2： 制作一个通用的clear：both的方法，解决子标签float的问题；
        .clearfix:after{
            content:".";
            clear:both;
            visibility: hidden;
        }