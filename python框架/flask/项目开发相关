1.pipreqs:
https://www.cnblogs.com/bonelee/p/8183038.html

查找python项目依赖并生成requirements.txt

一起开发项目的时候总是要搭建环境和部署环境的，这个时候必须得有个python第三方包的list，一般都叫做requirements.txt。
如果一个项目使用时virtualenv环境，还好办 pip freeze 就可以解决，但是如果一个项目的依赖list没有维护，而且又是环境混用，
那就不好整理的呀，不过，这里安利一个工具 pipreqs，可以自动根据源码生成 requirements.txt .

使用pip freeze

$ pip freeze > requirements.txt

这种方式配合virtualenv 才好使，否则把整个环境中的包都列出来了。

使用 pipreqs
这个工具的好处是可以通过对项目目录的扫描，自动发现使用了那些类库，自动生成依赖清单。

缺点是可能会有些偏差，需要检查并自己调整下。

# pip3 install pipreqs或
# pip install pipreqs

# 使用方式也比较简单
pipreqs ./

INFO: Starting new HTTPS connection (1): pypi.python.org
INFO: Starting new HTTPS connection (1): pypi.python.org
INFO: Starting new HTTPS connection (1): pypi.python.org
INFO: Starting new HTTPS connection (1): pypi.python.org
INFO: Starting new HTTPS connection (1): pypi.python.org
INFO: Starting new HTTPS connection (1): pypi.python.org
INFO: Successfully saved requirements file in ./requirements.txt

cat requirements.txt

Django == 1.6
django_redis == 4.3.0
redis == 2.10.5
django_redis_cache == 1.6.5
simplejson == 3.8.2
Twisted == 16.0.0
pycrypto == 2.6.1
ConcurrentLogHandler == 0.9.1
cx_Oracle == 5.2.1
ujson == 1.35

有时候结果可能会有些偏差，这里并没有用Oracle的相关驱动，根据的需要修改 requirements.txt 就好了。

Q&a:
##对这个项目使用pipreqs 时遇到的问题：
C:\Users\lin\PycharmProjects\python_study_1s\python_study\git-zhl\python-study\python框架\flask\flask插件\flask-sqlalchemy\sansa>pipreqs ./
Traceback (most recent call last):
  File "c:\python3\lib\runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "c:\python3\lib\runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "C:\python3\Scripts\pipreqs.exe\__main__.py", line 9, in <module>
  File "c:\python3\lib\site-packages\pipreqs\pipreqs.py", line 397, in main
    init(args)
  File "c:\python3\lib\site-packages\pipreqs\pipreqs.py", line 342, in init
    extra_ignore_dirs=extra_ignore_dirs)
  File "c:\python3\lib\site-packages\pipreqs\pipreqs.py", line 76, in get_all_imports
    contents = f.read()
UnicodeDecodeError: 'gbk' codec can't decode byte 0xaf in position 285: illegal multibyte sequence  //提示编码错误

C:\Users\lin\PycharmProjects\python_study_1s\python_study\git-zhl\python-study\python框架\flask\flask插件\flask-sqlalchemy\sansa>pipreqs ./
Traceback (most recent call last):
  File "c:\python3\lib\runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "c:\python3\lib\runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "C:\python3\Scripts\pipreqs.exe\__main__.py", line 9, in <module>
  File "c:\python3\lib\site-packages\pipreqs\pipreqs.py", line 397, in main
    init(args)
  File "c:\python3\lib\site-packages\pipreqs\pipreqs.py", line 342, in init
    extra_ignore_dirs=extra_ignore_dirs)
  File "c:\python3\lib\site-packages\pipreqs\pipreqs.py", line 75, in get_all_imports
    with open_func(os.path.join(root, file_name), "r", encoding=encoding,erros='ignore') as f:
TypeError: 'erros' is an invalid keyword argument for this function

C:\Users\lin\PycharmProjects\python_study_1s\python_study\git-zhl\python-study\python框架\flask\flask插件\flask-sqlalchemy\sansa>pipreqs ./
INFO: Successfully saved requirements file in ./requirements.txt

改善方法：
打开源码：  File "c:\python3\lib\site-packages\pipreqs\pipreqs.py", line 75, in get_all_imports，找到下面调用open_func的地方，就是open函数的重命名，增加一个参数：errors='ignore'
with open_func(os.path.join(root, file_name), "r", encoding=encoding,errors='ignore') as f:
                contents = f.read()

remark: open 函数： https://www.cnblogs.com/sesshoumaru/p/6047046.html

